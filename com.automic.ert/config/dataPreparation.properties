# Specifies the maximum number of training samples that 
# are used for the training algorithm.
maxTrainingData = 10000

# Specification of attributes extracted from timestamp
# attributes. It is possible to use the day of the month,
# the day of week, the hour of the day, the minute of the
# hour and the milliseconds since time 0. Note that the
# last one is not cyclic and can therefore only be treated
# as a numerical attribute.
# Possible encoding values:
#	Nominal: extracted value is a string
#	Numerical: extracted value is a number
#	Circular: extracted value is encoded as two numbers
#	None: no value is extracted
timestampEncoding.dayOfMonth = Nominal
timestampEncoding.dayOfWeek = Nominal
timestampEncoding.hourOfDay = Circular
timestampEncoding.minuteOfHour = Circular
timestampEncoding.millisOfEpoch = Numerical


# Filter for nominal attributes. This is based on the most frequent
# value. If nearly every data instance has the same value the attribute
# is considered useless. The same applies to the case if nearly every
# data instance has a different value.
# The values define the limits as percentages in [0, 1].
filter.attribute.nominal.mostFrequentValueAbove = 0.99
filter.attribute.nominal.mostFrequentValueBelow = 0.01

# Filter for numerical attributes based on the deviation of the values
# of the attribute. If the deviation is smaller than this threshold, the
# attribute is considered useless.
filter.attribute.numerical.minDeviation = 0.00

# Filter for numerical attributes that correlate highly with another
# attribute. The maximum correlation value is defined here.
filter.attribute.numerical.maxCorrelation = 0.95

# Filter for numerical attributes that deletes attributes which show not
# enough correlation with the target value. The threshold for this correlation
# is given by the minimum p-value to assume that the values are indeed uncorrelated.
filter.attribute.numerical.minPForUncorrelationAssumption = 0.99

# Filter the training data with respect to the target value. Remove upper/lower
# percentage [0, 1].
filter.data.targetLowestPercentage = 0.00
filter.data.targetUppermostPercentage = 0.00

# The Correlation Feature Selection (CFS) measure evaluates subsets of
# features on the basis of the hypothesis that good feature subsets contain
# features highly correlated with the target value, yet uncorrelated to each other.
# The following parameters configure a genetic algorithm that optimizes the 
# feature selection with respect to this observation.
filter.attribute.cfsEnabled = true
filter.attribute.ga.populationSize = 10
filter.attribute.ga.timeLimitMs = 1000
filter.attribute.ga.stagnationLimit = 1
filter.attribute.ga.multiThreaded = true

# The feature selection procedure trains and evaluates models based on different 
# attribute selections. The selection that performs best is used for the final model.
# The following algorithms may be used for this step:
#	GeneticAlgorithm: Heuristic search with a genetic algorithm.
#	ForwardSearch: Search starting with minimal feature set, adding features as long as an improvement results.
#	BackwardElimination: Search starting with maximum feature set, removing features as long as an improvement results.
#	None: No feature selection is executed
selection.type = None
selection.ga.populationSize = 50
selection.ga.timeLimitMs = 1000
selection.ga.stagnationCount = 10
selection.ga.multiThreaded = true